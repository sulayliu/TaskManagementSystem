@model IEnumerable<TaskManagementSystem.Models.Project>
@using TaskManagementSystem.Models

@{
    ViewBag.Title = "Index";
}

<h2>Index     @Html.ActionLink("Notification", "Create")</h2>

<p>
    @Html.ActionLink("New Project", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        @Html.Raw("Sort By: ")
        @Html.DropDownList("SelectFilter", (SelectList)ViewBag.Values, new { onchange = "this.form.submit();" })
    </p>
}

<table class="table">
    <tr>
        <th>

        </th>
        <th style="width: 230px">
            @Html.Raw("Project Name")
        </th>
        <th style="width: 230px">
            @Html.DisplayNameFor(model => model.Content)
        </th>
    </tr>
    @foreach (var project in Model)
    {
        <tr>
            <td style="padding-left: 0px; padding-right: 0px; margin-left: 0px; margin-right: 0px; width: 10px">
                <i class="fa fa-plus icon" id="Icon"></i>
            </td>
            <td>
                @Html.DisplayFor(modelItem => project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => project.Content)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = project.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = project.Id }) |
                @Html.ActionLink("Create Task", "Create", "ProTasks", new { projectId = project.Id }, null)
            </td>
        </tr>
        if (project.ProTasks.Count > 0)
        {
            <tbody>
                <tr>
                    <th>
                    </th>
                    <th>
                        @Html.Raw("Task Name")
                    </th>
                    <th>
                        @Html.Raw("% Completed")
                    </th>
                    <th>
                        @Html.Raw("Priority")
                    </th>
                    <th>
                        @Html.Raw("Deadline")
                    </th>
                    <th>
                        @Html.Raw("Assigned Developer")
                    </th>
                </tr>
                @foreach (var task in project.ProTasks)
                {
                    <tr style="color:yellowgreen">
                        <td>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.Name)
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => task.CompletedPercentage)*@
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped @(ProgressHelper.ClassSelector(task.CompletedPercentage))" role="progressbar" style="width: @task.CompletedPercentage%" aria-valuenow="@task.CompletedPercentage" aria-valuemin="0" aria-valuemax="100">@task.CompletedPercentage</div>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.Priority)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.Deadline)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.UserName)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "ProTasks", new { id = task.Id }, null) |
                            @Html.ActionLink("Delete", "Delete", "ProTasks", new { id = task.Id }, null) |
                            @Html.ActionLink("Comments", "Comments", "ProTasks", new { id = task.Id }, null)
                        </td>
                    </tr>
                }
            </tbody>
        }
    }

</table>

@section Scripts {
    <script src="~/Scripts/App.js"></script>
}